{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Typography, TextField, Divider } from '@material-ui/core';\nimport { useStyles } from './styles';\nimport { useHome } from './hooks';\nimport { DesmosProfile } from './components';\n\nconst Home = () => {\n  const classes = useStyles();\n  const {\n    state,\n    handleFormChange\n  } = useHome();\n  const displayNameCode = state.displayName ? `--nickname \"${state.displayName}\"` : '';\n  const profileCode = state.profileUrl ? `--profile-pic \"${state.profileUrl}\"` : '';\n  const coverCode = state.coverUrl ? `--cover-pic \"${state.coverUrl}\"` : '';\n  const bioCode = state.bio ? `--bio \"${state.bio}\"` : '';\n  const intro = `desmos tx profiles save ${state.dtag || '<dtag required>'} \\n ${displayNameCode} \\n ${profileCode} \\n ${coverCode} \\n ${bioCode}`;\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h1\"\n  }, \"Big Dipper 2.0 Desmos Profile Preview\"), __jsx(Typography, null, \"For users who want to see what their profile will look like before signing a transactions\"), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(\"div\", {\n    className: classes.contentWrapper\n  }, __jsx(\"div\", {\n    className: classes.leftWrapper\n  }, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    className: classes.form\n  }, __jsx(TextField, {\n    id: \"filled-name\",\n    label: \"Dtag (at least 6 characters)\",\n    value: state.dtag,\n    onChange: e => {\n      var _e$target;\n\n      return handleFormChange('dtag', e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n    },\n    variant: \"outlined\",\n    size: \"small\"\n  }), __jsx(TextField, {\n    id: \"filled-name\",\n    label: \"Display Name\",\n    value: state.displayName,\n    onChange: e => {\n      var _e$target2;\n\n      return handleFormChange('displayName', e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value);\n    },\n    variant: \"outlined\",\n    size: \"small\"\n  }), __jsx(TextField, {\n    id: \"filled-name\",\n    label: \"Profile URL\",\n    value: state.profileUrl,\n    onChange: e => {\n      var _e$target3;\n\n      return handleFormChange('profileUrl', e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.value);\n    },\n    variant: \"outlined\",\n    size: \"small\"\n  }), __jsx(TextField, {\n    id: \"filled-name\",\n    label: \"Cover URL\",\n    value: state.coverUrl,\n    onChange: e => {\n      var _e$target4;\n\n      return handleFormChange('coverUrl', e === null || e === void 0 ? void 0 : (_e$target4 = e.target) === null || _e$target4 === void 0 ? void 0 : _e$target4.value);\n    },\n    variant: \"outlined\",\n    size: \"small\"\n  }), __jsx(TextField, {\n    id: \"filled-name\",\n    label: \"Bio\",\n    multiline: true,\n    rows: 7,\n    value: state.bio,\n    onChange: e => {\n      var _e$target5;\n\n      return handleFormChange('bio', e === null || e === void 0 ? void 0 : (_e$target5 = e.target) === null || _e$target5 === void 0 ? void 0 : _e$target5.value);\n    },\n    variant: \"outlined\",\n    size: \"small\"\n  })), __jsx(\"div\", null, __jsx(\"pre\", null, __jsx(\"code\", null, intro))), __jsx(\"div\", {\n    className: classes.credits\n  }, __jsx(Typography, null, \"Maintained by Cat Boss\"), __jsx(Typography, null, \"Support us if this was useful \\u30FE(=`\\u03C9\\xB4=)\\u30CE\\u201D\"))), __jsx(\"div\", {\n    className: classes.preview\n  }, __jsx(\"div\", {\n    className: classes.mobile\n  }, __jsx(DesmosProfile, {\n    dtag: state.dtag,\n    nickname: state.displayName,\n    imageUrl: state.profileUrl,\n    bio: state.bio,\n    connections: [],\n    coverUrl: state.coverUrl\n  })), __jsx(\"div\", {\n    className: classes.tablet\n  }, __jsx(DesmosProfile, {\n    dtag: state.dtag,\n    nickname: state.displayName,\n    imageUrl: state.profileUrl,\n    bio: state.bio,\n    connections: [],\n    coverUrl: state.coverUrl,\n    mode: \"tablet\"\n  })), __jsx(\"div\", {\n    className: classes.desktop\n  }, __jsx(DesmosProfile, {\n    dtag: state.dtag,\n    nickname: state.displayName,\n    imageUrl: state.profileUrl,\n    bio: state.bio,\n    connections: [],\n    coverUrl: state.coverUrl,\n    mode: \"desktop\"\n  })))));\n};\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}