{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { lightTemplate, darkTemplate } from '@styles';\nimport { usePersistedState } from '@hooks';\n\n/**\n *\n * @param initialState\n */\nexport const useTheme = initialState => {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(initialState.theme);\n  const [themeSelection, setThemeSelection] = usePersistedState('themeSelection', initialState.themeSelection);\n  const themeList = ['light', 'dark', 'deuteranopia', 'tritanopia'];\n  const themeDictionary = {\n    light: lightTemplate,\n    dark: darkTemplate\n  };\n  useEffect(() => {\n    const isClient = false;\n\n    if (themeSelection === 'device') {\n      var _window, _window$matchMedia;\n\n      if (isClient && (_window = window) !== null && _window !== void 0 && (_window$matchMedia = _window.matchMedia('(prefers-color-scheme: dark)')) !== null && _window$matchMedia !== void 0 && _window$matchMedia.matches) {\n        setTheme('dark');\n      }\n    } else if (themeDictionary[themeSelection]) {\n      setTheme(themeSelection);\n    } else {\n      setTheme('light');\n    }\n  }, [themeSelection]);\n\n  const changeTheme = value => {\n    if (themeDictionary[value]) {\n      setThemeSelection(value);\n    }\n  };\n\n  return {\n    theme,\n    muiTheme: createMuiTheme(themeDictionary[theme] || lightTemplate),\n    themeSelection,\n    themeList,\n    themeDictionary,\n    changeTheme\n  };\n};","map":null,"metadata":{},"sourceType":"module"}