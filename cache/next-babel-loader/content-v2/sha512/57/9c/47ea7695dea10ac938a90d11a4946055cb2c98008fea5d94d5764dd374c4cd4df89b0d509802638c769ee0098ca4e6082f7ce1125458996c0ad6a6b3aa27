{"ast":null,"code":"import _slicedToArray from \"/home/runner/work/big-dipper-profile-preview/big-dipper-profile-preview/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\n/**\n * Helper hook to handle values that may need to be story throughout multiple sessions\n * @param key key value that exist in localstorage\n * @param initialValue initial value to be set if none is found\n */\n\nexport var usePersistedState = function usePersistedState(key, initialValue) {\n  var _React$useState = React.useState(initialValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var retrievePersistedValue = React.useCallback(function () {\n    try {\n      var persistedString = localStorage.getItem(key);\n\n      if (!persistedString) {\n        return;\n      }\n\n      var persistedValue = JSON.parse(persistedString);\n      setValue(persistedValue);\n    } catch (err) {// Does nothing\n    }\n  }, []);\n  React.useEffect(function () {\n    retrievePersistedValue();\n  }, []);\n  React.useEffect(function () {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value]);\n  return [value, setValue];\n};","map":null,"metadata":{},"sourceType":"module"}