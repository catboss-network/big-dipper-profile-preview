{"ast":null,"code":"import _defineProperty from \"/home/runner/work/big-dipper-profile-preview/big-dipper-profile-preview/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { lightTemplate } from '@styles';\nimport { useTheme } from './hooks';\nvar initialThemeState = {\n  theme: 'light',\n  themeSelection: 'device',\n  muiTheme: createMuiTheme(lightTemplate),\n  themeList: []\n};\nvar SettingsContext = /*#__PURE__*/React.createContext(_objectSpread({}, initialThemeState));\n\nvar SettingsProvider = function SettingsProvider(props) {\n  var children = props.children;\n\n  var _useTheme = useTheme(initialThemeState),\n      theme = _useTheme.theme,\n      muiTheme = _useTheme.muiTheme,\n      themeSelection = _useTheme.themeSelection,\n      changeTheme = _useTheme.changeTheme,\n      themeList = _useTheme.themeList;\n\n  return __jsx(SettingsContext.Provider, {\n    value: {\n      theme: theme,\n      themeSelection: themeSelection,\n      muiTheme: muiTheme,\n      changeTheme: changeTheme,\n      themeList: themeList\n    }\n  }, children);\n};\n\nvar useSettingsContext = function useSettingsContext() {\n  return React.useContext(SettingsContext);\n};\n\nexport { SettingsContext, SettingsProvider, useSettingsContext };","map":null,"metadata":{},"sourceType":"module"}